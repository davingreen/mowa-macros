{"version":3,"sources":["../../../src/utils/dataPrep.js"],"names":["getAppFieldLabels","itemToArray","fields","fieldLabels","field","type","push","external_id","label","config","settings","end","item","meta","field_ids","itemMeta","metaLabel","name","itemFieldValues","itemValues","getFieldValues","field_id","concat","fieldValues","map","values","join","multiple","JSON","stringify","value","text","start_utc","end_utc","formattedValues","entry","parseInt","replace"],"mappings":"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","file":"dataPrep.js","sourcesContent":["import _ from \"lodash\"\r\n\r\nexport function getAppFieldLabels(fields) {\r\n\tlet fieldLabels = []\r\n\tfor (let field of fields) {\r\n\t\tswitch (field.type) {\r\n\t\t\tcase \"date\": {\r\n\t\t\t\tfieldLabels.push({\r\n\t\t\t\t\texternal_id: field.external_id,\r\n\t\t\t\t\tlabel: field.label + \" - Start UTC\"\r\n\t\t\t\t})\r\n\t\t\t\tif (\r\n\t\t\t\t\t!!field.config.settings.end &&\r\n\t\t\t\t\tfield.config.settings.end !== \"disabled\"\r\n\t\t\t\t)\r\n\t\t\t\t\tfieldLabels.push({\r\n\t\t\t\t\t\texternal_id: field.external_id + \"_end\",\r\n\t\t\t\t\t\tlabel: field.label + \" - End UTC\"\r\n\t\t\t\t\t})\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcase \"email\":\r\n\t\t\tcase \"phone\": {\r\n\t\t\t\tfieldLabels.push({\r\n\t\t\t\t\texternal_id: field.external_id + \"_types\",\r\n\t\t\t\t\tlabel: field.label + \" - Types\"\r\n\t\t\t\t})\r\n\t\t\t\tfieldLabels.push({\r\n\t\t\t\t\texternal_id: field.external_id,\r\n\t\t\t\t\tlabel: field.label\r\n\t\t\t\t})\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tfieldLabels.push({\r\n\t\t\t\t\texternal_id: field.external_id,\r\n\t\t\t\t\tlabel: field.label\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn fieldLabels\r\n}\r\nexport function itemToArray(item, meta, field_ids) {\r\n\tlet itemMeta = []\r\n\tfor (let metaLabel of meta) {\r\n\t\tif (typeof item[metaLabel] === \"object\") itemMeta.push(item[metaLabel].name)\r\n\t\telse itemMeta.push(item[metaLabel])\r\n\t}\r\n\tlet itemFieldValues = []\r\n\tlet itemValues = getFieldValues(item.fields)\r\n\tfor (let field_id of field_ids) {\r\n\t\tif (!!itemValues[field_id]) itemFieldValues.push(itemValues[field_id])\r\n\t\telse itemFieldValues.push(\"\")\r\n\t}\r\n\treturn _.concat(itemMeta, itemFieldValues)\r\n}\r\nfunction getFieldValues(fields) {\r\n\tlet fieldValues = {}\r\n\tfor (let field of fields) {\r\n\t\tfieldValues[field.external_id] = \"\"\r\n\t\tswitch (field.type) {\r\n\t\t\tcase \"app\": {\r\n\t\t\t\tfieldValues[field.external_id] = _.map(field.values, \"value.item_id\").join(\",\")\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcase \"category\": {\r\n\t\t\t\tif (!!field.config.multiple && field.config.multiple)\r\n\t\t\t\t\tfieldValues[field.external_id] = JSON.stringify(_.map(field.values, \"value.text\"))\r\n\t\t\t\telse fieldValues[field.external_id] = field.values[0].value.text\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcase \"date\": {\r\n\t\t\t\tfieldValues[field.external_id] = field.values[0].start_utc\r\n\t\t\t\tif (\r\n\t\t\t\t\t!!field.config.settings.end &&\r\n\t\t\t\t\tfield.config.settings.end !== \"disabled\"\r\n\t\t\t\t)\r\n\t\t\t\tfieldValues[field.external_id + '_end'] = field.values[0].end_utc\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tcase \"email\":\r\n\t\t\tcase \"phone\": {\r\n\t\t\t\tfieldValues[field.external_id + '_types'] = _.map(field.values, \"type\").join(\",\")\r\n\t\t\t\tlet formattedValues = _.map(field.values, entry => {\r\n\t\t\t\t\treturn parseInt(entry.value.replace(/[^0-9\\.]/g, \"\"), 10)\r\n\t\t\t\t})\r\n\t\t\t\tfieldValues[field.external_id] = formattedValues.join(\",\")\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tdefault: {\r\n\t\t\t\tfieldValues[field.external_id] = field.values[0].value\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn fieldValues\r\n}\r\n"]}