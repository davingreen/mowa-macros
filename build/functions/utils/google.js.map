{"version":3,"sources":["../../../src/utils/google.js"],"names":["spreadsheet_id","sheet_id","values","updateCells","length","replaceSheet","getAuthUrl","getToken","authorize","appendToSheet","googleApis","require","auth","OAuth2","client","hasCredentials","sheets","client_id","client_secret","redirect","scope","generateAuthUrl","access_type","prompt","code","Promise","resolve","reject","err","tokens","clientInfo","id","secret","setCredentials","options","spreadsheets","append","spreadsheetId","range","valueInputOption","insertDataOption","resource","response","update","res"],"mappings":"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","file":"google.js","sourcesContent":["const googleApis = require(\"googleapis\")\r\nconst auth = googleApis.auth.OAuth2\r\n\r\nlet client,\r\n\thasCredentials,\r\n\tsheets = false\r\n\r\nexport function getAuthUrl(client_id, client_secret, redirect, scope) {\r\n\tclient = new auth(client_id, client_secret, redirect)\r\n\treturn client.generateAuthUrl({\r\n\t\taccess_type: \"offline\",\r\n\t\tscope,\r\n\t\tprompt: \"consent\"\r\n\t})\r\n}\r\n\r\nexport function getToken(client_id, client_secret, redirect, code) {\r\n\tclient = new auth(client_id, client_secret, redirect)\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tclient.getToken(code, (err, tokens) => {\r\n\t\t\tif (err) reject(err)\r\n\t\t\tresolve(tokens)\r\n\t\t\treturn\r\n\t\t})\r\n\t})\r\n}\r\n\r\nexport function authorize(clientInfo) {\r\n\tclient = new auth(clientInfo.id, clientInfo.secret, clientInfo.redirect)\r\n\tclient.setCredentials(clientInfo.tokens)\r\n\tgoogleApis.options({ auth: client })\r\n\thasCredentials = true\r\n\treturn this\r\n}\r\n\r\nexport function appendToSheet(sheet_id, values) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tif (!hasCredentials) {\r\n\t\t\treturn reject(\"Not authorized.\")\r\n\t\t}\r\n\t\tgoogleApis.sheets(\"v4\").spreadsheets.values.append({\r\n\t\t\tspreadsheetId: sheet_id,\r\n\t\t\trange: \"A:C\",\r\n\t\t\tvalueInputOption: \"USER_ENTERED\",\r\n\t\t\tinsertDataOption: \"INSERT_ROWS\",\r\n\t\t\tresource: {\r\n\t\t\t\tvalues: [values]\r\n\t\t\t}\r\n\t\t}, (err, response) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn reject(err)\r\n\t\t\t}\r\n\t\t\tresolve(response)\r\n\t\t})\r\n\t})\r\n}\r\nexport async function replaceSheet(spreadsheet_id, sheet_id, values) {\r\n\t/* await new Promise((resolve, reject) => {\r\n\t\tgoogleApis.sheets(\"v4\").spreadsheets.batchUpdate({\t\r\n\t\t\tspreadsheetId: spreadsheet_id,\r\n\t\t\tresource : {\r\n\t\t\t\trequests : [{\r\n\t\t\t\t\tupdateCells : {\r\n\t\t\t\t\t\trange: {\r\n\t\t\t\t\t\t\tsheetId: 0\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tfields: \"userEnteredValue\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}]\r\n\t\t\t}\r\n\t\t}, (err, res) => {\r\n\t\t\tif (err) {return reject(err)}\r\n\t\t\treturn resolve(res)\r\n\t\t})\r\n\t}) */\r\n\treturn await updateCells(spreadsheet_id, sheet_id + \"!A1:\" + values.length, values)\r\n}\r\nexport function updateCells(spreadsheetId, range, values) {\r\n\treturn new Promise((resolve, reject) => {\r\n\t\tgoogleApis.sheets(\"v4\").spreadsheets.values.update({\r\n\t\t\tspreadsheetId,\r\n\t\t\trange,\r\n\t\t\tvalueInputOption: \"RAW\",\r\n\t\t\tresource: {\r\n\t\t\t\tvalues\r\n\t\t\t}\r\n\t\t}, (err, res) => {\r\n\t\t\tif (err) {\r\n\t\t\t\treturn reject(err)\r\n\t\t\t}\r\n\t\t\treturn resolve(res)\r\n\t\t})\r\n\t})\r\n\r\n}"]}