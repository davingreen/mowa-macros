import _ from 'lodash'

export default class GoogleMaps {
  constructor(key) {
    this.mapsClient = require('@google/maps').createClient({
      key: key
    })
  }
  getLocation(address) {
    return new Promise((resolve, reject) => {
        return this.mapsClient.geocode(
        {
          address: address
        },
        (err, response) => {
          if (err) return reject(err)
          if (response.json.status == 'ZERO_RESULTS') return reject('Not found.')
            
          let address_components = response.json.results[0].address_components
          let city = _.find(address_components, c => {
            return c.types[0] == 'locality'
          })
          let state = _.find(address_components, c => {
            return c.types[0] == 'administrative_area_level_1'
          })
          let postal_code = _.find(address_components, c => {
            return c.types[0] == 'postal_code'
          })
          let county = _.find(address_components, c => {
            return c.types[0] == 'administrative_area_level_2'
          })
          resolve({
            formatted_address: response.json.results[0].formatted_address,
            city: city.long_name,
            state: state.long_name,
            postal_code: postal_code.long_name,
            county: county.long_name,
            position: response.json.results[0].geometry.location
          })
        }
      )
    })
  }
}
